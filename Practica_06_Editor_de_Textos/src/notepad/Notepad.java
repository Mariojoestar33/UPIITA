/*
 * Practica 06 Editor de Texto
 * @version 1.1 02/06/2021
 * @author Pe√±a Romero Mariano 1TV4
 */
package notepad;

import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author onair
 */
public class Notepad extends javax.swing.JFrame {

    /**
     * Creates new form Notepad
     */
    public Notepad() {
        initComponents();
        setLocationRelativeTo(null);
    }
    
    /*
    Este bloque se uso como prueba para el guardado de archivos en una direccion estatica
    */
    private void guardarArchivoConTryThrows() throws IOException {
        
        try(BufferedWriter out = new BufferedWriter(new FileWriter("archivo3.txt"))) {
            
            out.write(areaTexto.getText());
            
            JOptionPane.showMessageDialog(rootPane, "Se ha guardado con exito el archivo!!!", "Guardado", JOptionPane.OK_OPTION);
            
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jFileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        btnGuardar = new javax.swing.JButton();
        btnAbrir = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaTexto = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        btnArchivo = new javax.swing.JMenu();
        miNuevo = new javax.swing.JMenuItem();
        miAbrir = new javax.swing.JMenuItem();
        miGuardar = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Notepad");

        jToolBar1.setRollover(true);

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Guardar.jpg"))); // NOI18N
        btnGuardar.setFocusable(false);
        btnGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clickGuardar(evt);
            }
        });
        jToolBar1.add(btnGuardar);

        btnAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Abrir.jpg"))); // NOI18N
        btnAbrir.setFocusable(false);
        btnAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clickAbrir(evt);
            }
        });
        jToolBar1.add(btnAbrir);

        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Limpiar.jpg"))); // NOI18N
        btnBorrar.setFocusable(false);
        btnBorrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBorrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clickBorrar(evt);
            }
        });
        jToolBar1.add(btnBorrar);

        areaTexto.setColumns(20);
        areaTexto.setRows(5);
        jScrollPane1.setViewportView(areaTexto);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 869, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnArchivo.setText("Archivo");

        miNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        miNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Nuevo.jpg"))); // NOI18N
        miNuevo.setText("Nuevo");
        miNuevo.setToolTipText("Crea un archivo nuevo (no guarda el actual)");
        miNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clickNuevo(evt);
            }
        });
        btnArchivo.add(miNuevo);

        miAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        miAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Abrir.jpg"))); // NOI18N
        miAbrir.setText("Abrir");
        miAbrir.setToolTipText("Abre un archivo nuevo (pregunta si quieres guardar el actual antes)");
        miAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cAbrir(evt);
            }
        });
        btnArchivo.add(miAbrir);

        miGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        miGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Guardar.jpg"))); // NOI18N
        miGuardar.setText("Guardar");
        miGuardar.setToolTipText("Guarda el archivo actual");
        miGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cGuardar(evt);
            }
        });
        btnArchivo.add(miGuardar);

        jMenuBar1.add(btnArchivo);

        jMenu2.setText("Editar");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Metodo cuya funcion es la de guardar el archivo
     */
    private void Guardar () {
        
        int seleccion = jFileChooser.showSaveDialog(jMenu1); //Se llama para que aparesca el chooser para guardar el archivo
        
        if(seleccion == 0) { //Si se selecciona un archivo, adopatara el valor de 0
            
            try {
                
                PrintWriter writter = null;
                File archivo = jFileChooser.getSelectedFile();
                writter = new PrintWriter(archivo);
                writter.print(areaTexto.getText());
                writter.close();
                
                JOptionPane.showMessageDialog(rootPane, "Se ha guardado el archivo con Exito!!!", "Guardado Exitoso", HEIGHT);
                
            } catch (FileNotFoundException ex) {
                
                Logger.getLogger(Notepad.class.getName()).log(Level.SEVERE, null, ex);
                
            }
            
        } else { 
            
            JOptionPane.showMessageDialog(rootPane, "Se cancelo el guardado", "Cancelado", HEIGHT);
            
        }
        
    }
    
    /**
     * Metodo para abrir los ficheros
     */
    private void AbrirArchivo() {
        
        Limpiar();
            
        int seleccion = jFileChooser.showOpenDialog(jMenu1); //Se invoca al chooser para seleccionarlo
        
        if(seleccion == 0) {
            
            try {
                
                BufferedReader reader = null;
                File archivo = jFileChooser.getSelectedFile();
                reader= new BufferedReader(new FileReader(archivo));
                String linea = reader.readLine();
                while(linea != null) {
                    
                    areaTexto.append(linea);
                    areaTexto.append(System.getProperty("line.separator"));
                    linea = reader.readLine();
                    
                }
                
                reader.close();
                
            } catch (FileNotFoundException ex) {
                
                Logger.getLogger(Notepad.class.getName()).log(Level.SEVERE, null, ex);
                
            } catch (IOException ex) {
                
                Logger.getLogger(Notepad.class.getName()).log(Level.SEVERE, null, ex);
                
            }
            
        } else {
            
            JOptionPane.showMessageDialog(rootPane, "Se cancelo la ABERTURA de el archivo", "CANCELAR", HEIGHT);
            
        }
        
    }
    
    /**
     * Metodo para verificar si se requiere del guardado del archivo antes de abrir otro
     */
    private void Abrir() {
            
            int opcion;
        
            opcion = JOptionPane.showConfirmDialog(rootPane, "Deseas Guardar el archivo antes de abrir otro?", "Guardar???", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            
                 if(opcion == 0) { //Si se selecciona que si, saldra toda la funcion de guardado y depues permitira seleccionar el archivo a abrir
          
                    Guardar();

                    AbrirArchivo();
        
                } if(opcion == 1) { //Si se selecciona que no, saldra unicacmente la ventana de seleccion de archivo y no se guardadra el actual

                    AbrirArchivo();

                }
     
    }
     
    /**
     * Limpia el texto
     */
    private void Limpiar() {
        
        areaTexto.setText("");
        
    }
    
    private void clickGuardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clickGuardar
        // Se llama al metodo Guardar
        Guardar();
    }//GEN-LAST:event_clickGuardar

    private void clickAbrir(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clickAbrir
        // Se llama al metodo Abrir
        Abrir();
    }//GEN-LAST:event_clickAbrir

    private void clickBorrar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clickBorrar
        // Se llama al metodo Limpiar
        Limpiar();
    }//GEN-LAST:event_clickBorrar

    private void clickNuevo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clickNuevo
        // TODO add your handling code here:
        int opcion;
        
        opcion = JOptionPane.showConfirmDialog(rootPane, "Deseas Guardar el archivo antes de abrir uno nuevo?", "Guardar???", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        //Pregunta si se requiere guardar antes de crear un archivo limpio
        if(opcion == 0) {
            
            Guardar();
            
            Limpiar();
            
        } if(opcion == 1 ) {
            
            Limpiar();
            
        } 
        
    }//GEN-LAST:event_clickNuevo

    private void cAbrir(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cAbrir
        // TODO add your handling code here:
        Abrir();
    }//GEN-LAST:event_cAbrir

    private void cGuardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cGuardar
        // TODO add your handling code here:
        Guardar();
    }//GEN-LAST:event_cGuardar

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Notepad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaTexto;
    private javax.swing.JButton btnAbrir;
    private javax.swing.JMenu btnArchivo;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JFileChooser jFileChooser;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuItem miAbrir;
    private javax.swing.JMenuItem miGuardar;
    private javax.swing.JMenuItem miNuevo;
    // End of variables declaration//GEN-END:variables
}
